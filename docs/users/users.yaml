paths:
  /api/users:
    get:
      summary: Get list of users
      tags:
        - Users
      parameters:
        - name: limit
          in: query
          description: Maximum number of users to return
          required: false
          schema:
            type: integer
        - name: page
          in: query
          description: Result page number
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
    post:
      summary: Create a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
  /api/users/{email}:
    get:
      summary: Get a user by email
      tags:
        - Users
      parameters:
        - name: email
          in: path
          description: User's email address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      summary: Update an existing user
      tags:
        - Users
      parameters:
        - name: email
          in: path
          description: Email address of the user to update
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    delete:
      summary: Delete a user
      tags:
        - Users
      parameters:
        - name: email
          in: path
          description: Email address of the user to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        age:
          type: integer
        cart:
          type: array
          items:
            type: string
        roles:
          type: array
          items:
            type: string
        isAdmin:
          type: boolean
